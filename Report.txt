
This file is to contain your interoperability report.

Tested our program with Jerry Wang's program.

To test our program's interoperability with other implementations, we ran our two nodes in a shared group file with two
other nodes using Jerry Wang's implementation of the assignment. The four nodes were N5998, N6001
(Jerry's implementation) and N5999, N6000 (our implementation).

First we started by running N5998, N5999 and N6000. Once a coordinator was decided among the three,  we started N6001
to see if the bully algorithm would successfully assign it as the new coordinator. Then we shut down N6001 and checked
whether the system would be able to re-elect N6000 as the coordinator.

This test scenario was successful and ran as we anticipated. The system first assigned N6000 as the coordinator, then
N6001 and finally N6000 again.

We then repeated this test scenario but added send failure probabilities to each node. In this second case, we ran into
a moment where N5998 at some point started an election but never received any answer and timed out. N5998 then declared
itself as the coordinator while N5999 and N6000 had assigned N6000 as the coordinator. Eventually, N5998 received a
COORD message from N6000 and returned to monitoring it. However, this made us realize that there was a possible case
(with send failure probability) where each node in the group assigns itself as the coordinator resulting in a deadlock.

To fix this, Jerry suggested that if a coordinator does not receive a message before timing out, then it would start an
election. We implemented this change in our code but left it commented out, as it was stated in Piazza that this case
was not required to be handled.