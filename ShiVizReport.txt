The ShiViz visualization engine was useful in helping us debugging our code.
After we implemented everything, we had a standard test case where we instantiate 
4 nodes (N5998 - N6001) in reverse order and with varying timeout and aya values
and failure prob = 0. The initial behaviour was as expected: All 4 nodes agreed 
that N6001 is the Coordinator and 3 of them will start monitoring it.

Then, we manually shut down the initial Coordinator: N6001.

Expected behaviour: N5998 should detect the failure first since we made it to have
the lowest timeout and average AYA value (5 compared to 20 for the other nodes)
and should call a new election, which N6000 should win and then N5998 and N5999
should start monitoring N6000 until N6000 fails to respond.

Actual behaviour: The first part went as expected where N6000 correctly won the 
election and declared itself as Coordinator to N5998 and N5999. However, after 
this, N6000 shuts down right away as well (automatically), causing a new election 
where N5999 becomes Coordinator, which then fails as well causing N5998 to be the 
new Coordinator and the only running node before we manually shut it down.

We were able to refer to the ShiViz visualization and find the common issue that
the nodes all shut down automatically after it delcares self as Coordinator
(last event is sending Coord msg to a node). Thus, the problem 
must be in the section of our code where we change the state of a monitoring 
node to be the Coordinator. As expected, we found the bug was because we structured
the code like this (lines 287-333 in main()):

                    while(node is coord){
                      do coord stuff
                    }
                    while(node is not coord){
                      do monitoring/regular node stuff
                    }
                    end of program 
                    
We realized that after a node detected a failure and declares itself to be the
Coord, it will run to the end of the program instead of going back to the first
while loop (node is coord). To fix this bug, this, we just wrapped both while loops under
another infinite loop for(;;).


